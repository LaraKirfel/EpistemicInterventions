mutate(outcome_rating=as.numeric(outcome_rating))
### Set GGplot Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 14, vjust=.9),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
################# Causal Responses
CausalExp4 <- ggplot(df.exp_long, aes(x=ignorance,y=causal_rating, fill = ignorance, colour = ignorance))+
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_line(aes(group=participant),position = position_jitter(width = .1), size = 1, alpha=0.1)+ #Create lines between points for each subject
stat_summary(fun=mean, geom='line',color='black',  group = 1, position = position_nudge(x=.1))+ #Create grand averaged effects line
# geom_flat_violin(position = position_nudge(x = .1, y = 0),adjust =1.5, alpha=0.5)+
geom_point(position = position_jitter(width = .1), size = 1, alpha=0.5)+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", position = position_nudge(x=.1), colour = "BLACK", width = 0.5,
size = 1.2, shape = 21, fatten = 2.5)+
ylab('Score')+xlab('Group')+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank", labels=c("Knowledge", "Ignorance"))+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank", labels=c("Knowledge", "Ignorance"))+
labs( y="Causal Rating")+
theme_bw()+
guides(fill = FALSE, colour = FALSE) +
facet_grid(~scenario)+
myTheme+
theme(
axis.text.x = element_text(angle = 12, hjust = 1, color="black", size = 14))
CausalExp4
ggsave(CausalExp4, file="Fig4a.pdf", dpi=400, height = 5, width = 8)
##################### Counterfactual Responses
CFExp4<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of responses") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys", direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(
axis.text.x = element_text(angle = 25, hjust = 1, color="black", size = 14))
CFExp4
ggsave(CFExp4, file="Fig4b.pdf", dpi=400, height = 5, width = 8)
df.exp_cf <- within(df.exp_cf, ignorance <- relevel(ignorance, ref = "reads e-mail"))
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epist. change"), df.exp_cf)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="epist. change"), df.exp_cf)
#likelihood ratio test null vs factor model
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
##odds ratio
exp(coef(vglm1))
####R-Squared
LLf   <- logLik(vglm1)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
df.exp_cf2 <- within(df.exp_cf2, ignorance <- relevel(ignorance, ref = "reads e-mail"))
df.exp_cf <- within(df.exp_cf, ignorance <- relevel(ignorance, ref = "reads e-mail"))
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epist. change"), df.exp_cf)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="epist. change"), df.exp_cf)
#likelihood ratio test null vs factor model
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
##odds ratio
exp(coef(vglm1))
####R-Squared
LLf   <- logLik(vglm1)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
#df.exp_cf2 <- within(df.exp_cf2, ignorance <- relevel(ignorance, ref = "reads e-mail"))
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epist. change"), df.exp_cf2)
#df.exp_cf2 <- within(df.exp_cf2, ignorance <- relevel(ignorance, ref = "reads e-mail"))
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epist. change"), df.exp_cf2)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf2<- df.exp_cf%>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
#### Counterfactual Responses: BETWEEN CONTRAST
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf2)
####### Analysis
### Causal Ratings according to Countefactual Category
library("car")
library("emmeans")
library("afex")
################### Within Subject Contrast
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual== "... by info" | counterfactual=="... by info + e-mail reading" | counterfactual=="... by other action of agent" )
### Full model
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
S4  <- lmer(causal_rating ~  counterfactual *ignorance+ (1 | participant),df.exp_subgroup, REML=T)
##### Posthoc Test
S4_posthoc = emmeans(S4, specs = pairwise ~ counterfactual | ignorance)
summary(S4_posthoc)
##### Descriptives
df.exp_subgroup_desc <- df.exp_subgroup %>%
group_by(ignorance, counterfactual) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96)
################### Between Subject Contrast
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual== "... by info" | counterfactual=="... by info + e-mail reading" | counterfactual=="... by other action of agent" )
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual== "... by info" | counterfactual=="... by info + e-mail reading" | counterfactual=="... by other action of agent" )
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
####Create Dataframe for between subjects analysis
df.exp_long2 <- df.exp_long %>%
filter(order == "doesn't read e-mail first" & ignorance == "doesn't read e-mail" |order == "reads e-mail first" & ignorance == "reads e-mail")
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
####Create Dataframe for between subjects analysis
df.exp_long2 <- df.exp_long %>%
filter(order == "doesn't read e-mail first" & ignorance == "doesn't read e-mail" |order == "reads e-mail first" & ignorance == "reads e-mail")
df.exp_cf2<- df.exp_cf%>%
filter(order == "doesn't read e-mail first" & ignorance == "doesn't read e-mail" |order == "reads e-mail first" & ignorance == "reads e-mail")
####Forward looking ratings: Reading e-mail and outcome rating
df.exp_long_f = df.exp %>%
select(scenario,
order,
participant,
contains("look"),
contains("outcome"),
-starts_with("cf"))%>%
gather(condition, rating, "look_a1":"outcome_a2") %>%
mutate(ignorance = ifelse(str_detect(condition, "_a1"),
"read e-mail", "didn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "look"),"look_rating", "outcome_rating"
))%>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(look_rating=as.numeric(look_rating)) %>%
mutate(outcome_rating=as.numeric(outcome_rating))
#df.exp_cf2 <- within(df.exp_cf2, ignorance <- relevel(ignorance, ref = "reads e-mail"))
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epist. change"), df.exp_cf2)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="epist. change"), df.exp_cf2)
#likelihood ratio test null vs factor model
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
##odds ratio
exp(coef(vglm1))
####R-Squared
LLf   <- logLik(vglm1)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
################### Between Subject Contrast
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual== "... by info" | counterfactual=="... by info + e-mail reading" | counterfactual=="... by other action of agent" )
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
S3 %>% Anova()
####post hoc tests
S4  <- lm(causal_rating ~ counterfactual*ignorance, df.exp_subgroup2)
S4 %>% Anova()
S4_posthoc <- emmeans(S4, pairwise ~ counterfactual |ignorance)
summary(S4_posthoc)
##### Descriptives
df.exp_desc_subgroup2<- df.exp_subgroup2 %>%
group_by(ignorance, counterfactual) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96
)
######Knowledge and Blame plot
library("ggpubr")
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
##### Knowledge Bar Plot
Plot1<- ggplot(df.exp_long, aes(x=ignorance, y=know_rating, fill=ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black", alpha=0.5) +
stat_summary( fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.90), width = 0.2) +
geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
0.3, colour="grey")+
scale_fill_manual(values=c("lightyellow4", "gold"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Could have known Rating")+
theme_bw()+
myTheme
Plot1
##### Blame Bar Plot
Plot2 <- ggplot(df.exp_long, aes(x=ignorance, y=blame_rating, fill=ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black", alpha=0.5) +
stat_summary( fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.90), width = 0.2) +
geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
0.3, colour="grey")+
scale_fill_manual(values=c("ivory3", "khaki"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Blame for Ignorance Rating")+
theme_bw()+
myTheme
Plot2
##### Causal - Knowledge Regression Plot
Plot3<- ggplot(df.exp_long, aes(x=know_rating, y=causal_rating, fill=ignorance, colour= ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
scale_x_continuous(breaks = seq(1, 7, by=1))+
stat_smooth(method = "lm", col = "black", fullrange=F,aes(fill=ignorance)) +
#geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
#0.3, colour="grey")+
scale_fill_manual(values=c("lightyellow4", "gold"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Causal Rating", x ="Could have known Rating")+
theme_bw()+
myTheme+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9))
Plot3
#### Blame - Knowledge regression plot
Plot4<- ggplot(df.exp_long, aes(x=know_rating, y=blame_rating, fill=ignorance, colour= ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
scale_x_continuous(breaks = seq(1, 7, by=1))+
stat_smooth(method = "lm", col = "black", fullrange=F,aes(fill=ignorance)) +
#geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
#0.3, colour="grey")+
scale_fill_manual(values=c("ivory3", "khaki"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Blame for Ignorance Rating", x = "Could have known Rating")+
theme_bw()+
myTheme+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9))
Plot4
### merge plots with `read e-mail' and `no reading of e-mail' condition
Fig4d <- ggarrange(Plot1, Plot2, Plot3, Plot4,
ncol = 2,
nrow = 2)
### show plot
plot(Fig4d)
### save plot
ggsave(Fig4d, file="Fig4d.pdf", dpi=400, height = 8, width = 8)
### Experiment 4: Causal Ratings
library("car")
library("afex")
mixed(causal_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
C4  <- lmer(causal_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(C4)
##Post-Hoc Test: Ignorance
emmeans(C4, list(pairwise ~ ignorance), adjust = "tukey")
################### Between Contrasts
C4  <- lm(causal_rating ~ ignorance*scenario , df.exp_long2)
C4 %>% Anova()
####post hoc tests
C4_posthoc <- emmeans(C4, pairwise ~ ignorance)
summary(C4_posthoc)
### Experiment 4: Knowledge Ratings
############ Within Contrasts
mixed(know_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
K4  <- lmer(know_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(K4)
###Parwise T test for ignorance
emmeans(K4, list(pairwise ~ ignorance))
##############WBetween Contrasts
K4b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K4b %>% Anova()
####post hoc tests
K4b_posthoc <- emmeans(K4b, pairwise ~ ignorance)
summary(K4b_posthoc)
######Blame Rating
########## Within Contrasts
mixed(blame_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
B4  <- lmer(blame_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(B4)
########## Between Contrasts
B4b  <- lm(blame_rating ~ 1 + ignorance*scenario , df.exp_long2)
B4b %>% Anova()
####post hoc tests
B4b_posthoc <- emmeans(B4b, pairwise ~ ignorance)
summary(B4b_posthoc)
####Regression
######## Within subject contrast
mixed(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, method = 'LRT')
K4R  <- lmer(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, REML=T)
summary(K4R)
mixed(blame_rating ~ignorance*know_rating + (1 | participant), df.exp_long, method = 'LRT')
B4R  <- lmer(blame_rating ~ignorance*know_rating + (1 | participant), df.exp_long, REML=T)
summary(B4R)
##### Between subject contrast
K4Rb  <- lm(causal_rating ~ignorance*know_rating , df.exp_long2)
K4Rb %>% Anova()
summary(K4Rb)
B4Rb  <- lm(blame_rating ~ignorance*know_rating , df.exp_long2)
B4Rb %>% Anova()
summary(B4Rb)
############Plot Likelihood of future reading and outcome rating
#### create subdataframe with descriptives
df.ci<-df.exp_long_f %>%
group_by(ignorance) %>%
summarise(
m_look=mean(look_rating),
m_outcome=mean(outcome_rating),
l_sd   = sd(look_rating),
l_se   = l_sd / sqrt(n()),
l_upper_ci = m_look+l_se*1.96,
l_lower_ci = m_look-l_se*1.96,
o_sd   = sd(outcome_rating),
o_se   = o_sd / sqrt(n()),
o_upper_ci = m_outcome+o_se*1.96,
o_lower_ci = m_outcome-o_se*1.96
)
###### create plot
Fig4e<-  ggplot(df.exp_long_f, aes(x=look_rating, y=outcome_rating, group=ignorance, color=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.5, height = 0.4, alpha = 0.3) +
#geom_errorbarh( aes(xmin = l_lower_ci,xmax = o_upper_ci))+
geom_point(data=df.mean, size=6, shape=17) +
#geom_linerange(data=df.ci, aes(xmin = l_lower_ci,xmax = l_upper_ci))+
theme_bw()+
#theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
guides(shape=guide_legend(title.position="bottom",
legend.title.align = 0.9
))
df.ci<-df.exp_long_f %>%
group_by(ignorance) %>%
summarise(
m_look=mean(look_rating),
m_outcome=mean(outcome_rating),
l_sd   = sd(look_rating),
l_se   = l_sd / sqrt(n()),
l_upper_ci = m_look+l_se*1.96,
l_lower_ci = m_look-l_se*1.96,
o_sd   = sd(outcome_rating),
o_se   = o_sd / sqrt(n()),
o_upper_ci = m_outcome+o_se*1.96,
o_lower_ci = m_outcome-o_se*1.96
)
Fig4e<-  ggplot(df.exp_long_f, aes(x=look_rating, y=outcome_rating, group=ignorance, color=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.5, height = 0.4, alpha = 0.3) +
#geom_errorbarh( aes(xmin = l_lower_ci,xmax = o_upper_ci))+
geom_point(data=df.mean, size=6, shape=17) +
#geom_linerange(data=df.ci, aes(xmin = l_lower_ci,xmax = l_upper_ci))+
theme_bw()+
#theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
guides(shape=guide_legend(title.position="bottom",
legend.title.align = 0.9
))
Fig4e<-  ggplot(df.exp_long_f, aes(x=look_rating, y=outcome_rating, group=ignorance, color=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.5, height = 0.4, alpha = 0.3) +
#geom_errorbarh( aes(xmin = l_lower_ci,xmax = o_upper_ci))+
geom_point(data=df.ci, size=6, shape=17) +
#geom_linerange(data=df.ci, aes(xmin = l_lower_ci,xmax = l_upper_ci))+
theme_bw()+
#theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
guides(shape=guide_legend(title.position="bottom",
legend.title.align = 0.9
))
Fig4e
### Experiment 4: Likelhood of reading and future outcome rating
###### Reading Rating
L4  <- lm(look_rating ~ 1 + ignorance*scenario, df.exp_long_f)
anova(L4)
summary(L4)
###### Outcome Rating
O4  <- lm(outcome_rating ~ 1 + ignorance*scenario, df.exp_long_f)
anova(O4)
summary(O4)
df.exp_descf_ratings<- df.exp_long_f%>%
group_by(ignorance) %>%
summarise(r_mean = mean(look_rating),#causal rating
r_sd   = sd(look_rating),
r_se   = r_sd / sqrt(n()),
r_upper_ci = r_mean+r_se*1.96,
r_lower_ci = r_mean-r_se*1.96,
o_mean = mean(outcome_rating),#could have known rating
o_sd   = sd(outcome_rating),
o_se   = o_sd / sqrt(n()),
o_upper_ci = o_mean+o_se*1.96,
o_lower_ci = o_mean-o_se*1.96
)
df.ci<-df.exp_long_f %>%
group_by(ignorance) %>%
summarise(
m_look=mean(look_rating),
m_outcome=mean(outcome_rating),
l_sd   = sd(look_rating),
l_se   = l_sd / sqrt(n()),
l_upper_ci = m_look+l_se*1.96,
l_lower_ci = m_look-l_se*1.96,
o_sd   = sd(outcome_rating),
o_se   = o_sd / sqrt(n()),
o_upper_ci = m_outcome+o_se*1.96,
o_lower_ci = m_outcome-o_se*1.96
)
Fig4e<-  ggplot(df.exp_long_f, aes(x=look_rating, y=outcome_rating, group=ignorance, color=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.5, height = 0.4, alpha = 0.3) +
#geom_errorbarh( aes(xmin = l_lower_ci,xmax = o_upper_ci))+
geom_point(data=dfci, size=6, shape=17) +
#geom_linerange(data=df.ci, aes(xmin = l_lower_ci,xmax = l_upper_ci))+
theme_bw()+
#theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
guides(shape=guide_legend(title.position="bottom",
legend.title.align = 0.9
))
Fig4e<-  ggplot(df.exp_long_f, aes(x=look_rating, y=outcome_rating, group=ignorance, color=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.5, height = 0.4, alpha = 0.3) +
#geom_errorbarh( aes(xmin = l_lower_ci,xmax = o_upper_ci))+
geom_point(data=df.ci, size=6, shape=17) +
#geom_linerange(data=df.ci, aes(xmin = l_lower_ci,xmax = l_upper_ci))+
theme_bw()+
#theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
guides(shape=guide_legend(title.position="bottom",
legend.title.align = 0.9
))
Fig4e
View(df.exp_long_f)
