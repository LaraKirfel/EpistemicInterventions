age) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_externally_caused",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_self_caused",
index)) %>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"mail_1"),
"mail_1",
index))%>%
mutate(index = ifelse(str_detect(index,"mail_2"),
"mail_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"external first",
ifelse(order == 2, "self first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 2: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="2",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_2=="1",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8)
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
####Experiment 2
###Demographics
df.exp_demo <- df.exp %>%
select(age, gender, duration) %>%
mutate(age=as.numeric(age)) %>%
transform(gender= ifelse(gender==1, "Male", #recode numbers into gender categories
ifelse(gender==2, "Female",
ifelse(gender==3, "Prefer not to say", gender)))) %>%
filter(age<100 |age ==" ") %>% #remove outliers (year) or N.A.s
summarize(n=n(),
female=sum(gender=="Female"),
not_say=sum(gender=="Prefer not to say"),
mean_age = mean(age),
std_age=sd(age),
mean_time=mean(duration/60),
sd_time=sd(duration/60)
)
#### long format
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("code"),
contains("detailed"),
-starts_with("cf"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"externally caused", "self-caused")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating",
ifelse(str_detect(condition, "code"), "counterfactual",
"counterfactual_specific"))))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(ignorance= ordered(ignorance, levels = c("self-caused", "externally caused"))) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=dplyr::recode(counterfactual,
'1' = "causal action",
'2_1' = "epistemic change",
'2_2' = "... self-caused",
'2_3' = "... externally caused",
'2_4' = "... externally caused",
'2_5' = "... self-caused",
'2_6' = "epistemic change",
'4' =  "environment",
'X' = "X")) %>%
mutate(counterfactual=factor(counterfactual, levels=c("causal action", "epistemic change", "... self-caused", "... externally caused", "environment", "X")))
############### Dataframe
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
reshape(v.names="counterfactual", timevar="ignorance", idvar=c("participant", "scenario", "order"),
direction="wide") %>%
filter(`counterfactual.externally caused` != "X" ) %>% ###delete those participants who selected a non-sensical answer
reshape(idvar=c("participant", "scenario", "order"),
sep = ".", direction = "long") %>%  ###reshape back into long format
remove_rownames()
############### Descriptives
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
df.exp_cf2 <- df.exp_cf %>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
df.exp_cf_desc2 <- df.exp_cf2%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
group_by(ignorance) %>%
mutate(total=sum(n),
freq=n/total)
### Set GGplot Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 14, vjust=.9),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
################# Causal Responses
CausalExp2 <- ggplot(df.exp_long, aes(x=ignorance, y=causal_rating, fill = ignorance, colour = ignorance))+
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_line(aes(group=participant),position = position_jitter(width = .1), size = 1, alpha=0.1)+ #Create lines between points for each subject
stat_summary(fun=mean, geom='line',color='black',  group = 1, position = position_nudge(x=.1))+ #Create grand averaged effects line
#geom_flat_violin(position = position_nudge(x = .1, y = 0),adjust =1.5, alpha=0.5)+
geom_point(position = position_jitter(width = .1), size = 1, alpha=0.5)+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", position = position_nudge(x=.1), colour = "BLACK", width = 0.5,
size = 1.2, shape = 21, fatten = 2.5)+
ylab('Score')+xlab('Group')+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank", labels=c("Knowledge", "No Knowledge"))+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank", labels=c("Knowledge", "No Knowledge"))+
labs( y="Causal Rating")+
theme_bw()+
guides(fill = FALSE, colour = FALSE) +
facet_grid(~scenario)+
myTheme+
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 12))
### Set GGplot Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 14, vjust=.9),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
################# Causal Responses
CausalExp2 <- ggplot(df.exp_long, aes(x=ignorance, y=causal_rating, fill = ignorance, colour = ignorance))+
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_line(aes(group=participant),position = position_jitter(width = .1), size = 1, alpha=0.1)+ #Create lines between points for each subject
stat_summary(fun=mean, geom='line',color='black',  group = 1, position = position_nudge(x=.1))+ #Create grand averaged effects line
#geom_flat_violin(position = position_nudge(x = .1, y = 0),adjust =1.5, alpha=0.5)+
geom_point(position = position_jitter(width = .1), size = 1, alpha=0.5)+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", position = position_nudge(x=.1), colour = "BLACK", width = 0.5,
size = 1.2, shape = 21, fatten = 2.5)+
ylab('Score')+xlab('Group')+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank", labels=c("Knowledge", "No Knowledge"))+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank", labels=c("Knowledge", "No Knowledge"))+
labs( y="Causal Rating")+
theme_bw()+
guides(fill = FALSE, colour = FALSE) +
facet_grid(~scenario)+
myTheme+
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 12))
CausalExp2
### Export Figure
ggsave(CausalExp2, file="Fig2a.pdf", dpi=400, height = 5, width = 8)
##################### Counterfactual Responses
CFExp2<-ggplot(df.exp_cf2, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of response") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys",  direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.text.y = element_text(color="black", size = 14, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 14))
CFExp2
###Export Figure
ggsave(CFExp2, file="Fig2b.pdf", dpi=400, height = 5, width = 8)
######Subgroup Analysis
myTheme <-   theme(plot.title=element_text(size=18,
face="bold",
hjust=0.5,
lineheight=1.2),
axis.title.y = element_text(color="black", size = 14, vjust=.9),
axis.title.x = element_text(color="black", size = 14, vjust=.9),
axis.text.x =  element_text(color="black", size = 14, vjust=.9),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.title = element_text(color="black", size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
#### Create text dataframe
df.text <- data.frame(
ignorance = c("self-caused", "self-caused","externally caused", "externally caused"),
counterfactual = c("... self-caused", "... externally caused", "... self-caused", "... externally caused"),
N = c("N = 127", "N = 4", "N = 35", "N = 88")
)
#### Create graph
Fig2c = df.exp_long %>%
filter(counterfactual=="... self-caused" | counterfactual=="... externally caused") %>%
ggplot(aes(x=counterfactual, y=causal_rating, fill=counterfactual)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_jitter(height = 0.1, width = 0.1, alpha =  0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
scale_fill_manual(values=c("grey48", "gray86"), name="blank")+
facet_wrap(~ignorance)+
geom_text(data= df.text,
aes(label = N,
y = 6.5,
x = counterfactual)
) +
labs(x= "Epistemic state change")+
labs(y="Causal Rating")+
labs(title="Ignorance")+
theme_bw()+
myTheme+
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14),
legend.position= "none")
Fig2c
###Export Figure
ggsave(Fig2c, file="Fig2c.pdf", dpi=400, height = 5, width = 8)
######Knowledge and Blame plot
######## set theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
##### Knowledge Bar Plot
Plot1<- ggplot(df.exp_long, aes(x=ignorance, y=know_rating, fill=ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black", alpha=0.5) +
stat_summary( fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.90), width = 0.2) +
geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
0.3, colour="grey")+
scale_fill_manual(values=c("lightyellow4", "gold"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Could have known Rating")+
theme_bw()+
myTheme
Plot1
##### Blame Bar Plot
Plot2 <- ggplot(df.exp_long, aes(x=ignorance, y=blame_rating, fill=ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black", alpha=0.5) +
stat_summary( fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.90), width = 0.2) +
geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
0.3, colour="grey")+
scale_fill_manual(values=c("ivory3", "khaki"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Blame for Ignorance Rating")+
theme_bw()+
myTheme
Plot2
##### Causal - Knowledge Regression Plot
Plot3<- ggplot(df.exp_long, aes(x=know_rating, y=causal_rating, fill=ignorance, colour= ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
scale_x_continuous(breaks = seq(1, 7, by=1))+
stat_smooth(method = "lm", col = "black", fullrange=F,aes(fill=ignorance)) +
#geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
#0.3, colour="grey")+
scale_fill_manual(values=c("lightyellow4", "gold"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Causal Rating", x ="Could have known Rating")+
theme_bw()+
myTheme+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9))
Plot3
#### Blame - Knowledge regression plot
Plot4<- ggplot(df.exp_long, aes(x=know_rating, y=blame_rating, fill=ignorance, colour= ignorance)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(1, 7, by=1))+
scale_x_continuous(breaks = seq(1, 7, by=1))+
stat_smooth(method = "lm", col = "black", fullrange=F,aes(fill=ignorance)) +
#geom_jitter(position = position_jitterdodge(jitter.height = 0.2, dodge.width = 0.90, jitter.width=0.15), alpha =
#0.3, colour="grey")+
scale_fill_manual(values=c("ivory3", "khaki"))+
#scale_fill_brewer(palette="Dark2")+
labs( y="Blame for Ignorance Rating", x = "Could have known Rating")+
theme_bw()+
myTheme+
theme(axis.title.x  = element_text(color="black", size = 14, vjust=.9))
Plot4
### merge plots with `knowledge' and `no knowledge' condition
Fig2d <- ggarrange(Plot1, Plot2, Plot3, Plot4,
ncol = 2,
nrow = 2)
### show plot
plot(Fig2d)
### save plot
ggsave(Fig2d, file="Fig2d.pdf", dpi=400, height = 8, width = 8)
####Create Dataframe for between subjects analysis
df.exp_long2 <- df.exp_long %>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
### Experiment 2: Causal Ratings
library(afex)
library(car)
############## Within Contrasts
mixed(causal_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
C2  <- lmer(causal_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(C2)
##Post-Hoc Test: Ignorance
emmeans(C2, list(pairwise ~ ignorance), adjust = "tukey")
################### Between Contrasts
C2  <- lm(causal_rating ~ 1 + ignorance*scenario , df.exp_long2)
C2 %>% Anova()
####post hoc tests
C2_posthoc <- emmeans(C2, pairwise ~ ignorance)
summary(C2_posthoc)
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf)
#likelihood ratio test null vs factor model
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
##odds ratio
exp(coef(vglm1))
####R-Squared
LLf   <- logLik(vglm1)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf2<- df.exp_cf%>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
#### Counterfactual Responses: BETWEEN CONTRAST
df.exp_cf <- within(df.exp_cf2, ignorance <- relevel(ignorance, ref = 'self-caused'))
#### Counterfactual Responses: BETWEEN CONTRAST
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf2)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf2)
#likelihood ratio test null vs factor model
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
##odds ratio
exp(coef(vglm1))
####R-Squared
LLf   <- logLik(vglm1)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
################### Within Subject Contrast
### Create subgroup dataframe
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual=="... self-caused" | counterfactual=="... externally caused")
### Full model
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
##### Posthoc Test
S1  <- lmer(causal_rating ~  counterfactual *ignorance+ (1 | participant),df.exp_subgroup, REML=T)
S1_posthoc = emmeans(S1, specs = pairwise ~ counterfactual | ignorance)
summary(S1_posthoc)
##### Descriptives
df.exp_desc_subgroup<- df.exp_subgroup %>%
group_by(ignorance, counterfactual) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96
)
################### Between Subject Contrast
### Create subgroup dataframe
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual=="... self-caused" | counterfactual=="... externally caused")
### Full model
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
S3 %>% Anova()
####Post hoc tests
S4  <- lm(causal_rating ~ counterfactual*ignorance, df.exp_subgroup2)
S4 %>% Anova()
S4_posthoc <- emmeans(S4, pairwise ~ counterfactual |ignorance)
summary(S4_posthoc)
##### Descriptives
df.exp_desc_subgroup2<- df.exp_subgroup2 %>%
group_by(ignorance, counterfactual) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96
)
### Experiment 3: Knowledge Ratings
############ Within Contrasts
###Model
df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
### Experiment 3: Knowledge Ratings
############ Within Contrasts
###Model
#df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
d#f.exp_long <- within(df.exp_long, scenario<- relevel(scenario, ref = 'bakery'))
### Experiment 3: Knowledge Ratings
############ Within Contrasts
###Model
#df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
#df.exp_long <- within(df.exp_long, scenario<- relevel(scenario, ref = 'bakery'))
mixed(know_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
K2  <- lmer(know_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(K2)
###Parwise T test for ignorance
emmeans(K2, list(pairwise ~ ignorance))
##############WBetween Contrasts
K2b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K2b %>% Anova()
####post hoc test ignorance
K2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
summary(K2b_posthoc)
####post hoc test scenario
K2b_posthoc <- emmeans(K2b, pairwise ~ scenario)
summary(K2b_posthoc)
### Experiment 2: Blame Ratings
df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
### Experiment 2: Blame Ratings
#df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
#df.exp_long <- within(df.exp_long, scenario<- relevel(scenario, ref = 'bakery'))
########## Within Contrasts
mixed(blame_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
B2  <- lmer(blame_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(B2)
###Parwise T test for scenario & scenario
B2_posthoc <- emmeans(B2, pairwise ~ scenario)
summary(B2_posthoc)
########## Between Contrasts
B2b  <- lm(blame_rating ~ 1 + ignorance*scenario , df.exp_long2)
B2b %>% Anova()
####post hoc tests
B2b_posthoc <- emmeans(B2b, pairwise ~ scenario)
summary(B2b_posthoc)
######## Within subject contrast
mixed(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, method = 'LRT')
K2R  <- lmer(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, REML=T)
summary(K2R)
mixed(blame_rating ~ignorance*know_rating + (1 | participant), df.exp_long, method = 'LRT')
B2R  <- lmer(blame_rating ~ignorance*know_rating + (1 | participant), df.exp_long, REML=T)
summary(B2R)
##### Between subject contrast
K2Rb  <- lm(causal_rating ~ignorance*know_rating , df.exp_long2)
K2Rb %>% Anova()
B2Rb  <- lm(blame_rating ~ignorance*know_rating , df.exp_long2)
B2Rb %>% Anova()
