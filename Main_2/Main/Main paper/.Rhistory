ggplot(aes(x=counterfactual, y=causal_rating, fill=counterfactual)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_jitter(height = 0.1, width = 0.1, alpha =  0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
scale_fill_manual(values=c("grey48", "gray86"), name="blank")+
facet_wrap(~ignorance)+
geom_text(data= df.text,
aes(label = N,
y = 6.5,
x = counterfactual)
) +
labs(x= "Epistemic state change")+
labs(y="Causal Rating")+
labs(title="Ignorance")+
theme_bw()+
myTheme+
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14),
legend.position= "none")
Fig2c
ggsave(Fig2c, file="Fig2c.pdf", dpi=400, height = 5, width = 8)
K2b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K2b %>% Anova()
K2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
summary(Kb2_posthoc)
K2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
summary(K2b_posthoc)
K2b_posthoc <- emmeans(K2b, pairwise ~ ignorance|scenario)
summary(K2b_posthoc)
K2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
summary(K2b_posthoc)
emmeans(K2, list(pairwise ~ ignorance))
K2b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K2b %>% Anova()
####post hoc tests
K2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
summary(K2b_posthoc)
S4  <- lm(causal_rating ~ counterfactual*ignorance, df.exp_subgroup2)
S4 %>% Anova()
S4_posthoc <- emmeans(S4, pairwise ~ counterfactual |ignorance)
summary(S4_posthoc)
K2b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K2b %>% Anova()
B2b  <- lm(blame_rating ~ 1 + ignorance*scenario , df.exp_long2)
B2b %>% Anova()
B2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
summary(B2b_posthoc)
B2b %>% Anova()
K2Rb  <- lm(causal_rating ~ignorance*know_rating , df.exp_long2)
K2Rb %>% Anova()
B2Rb  <- lm(blame_rating ~ignorance*know_rating , df.exp_long2)
B2Rb %>% Anova()
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("nlme")
library("ggpubr")
# set ggplot theme
theme_set(
theme_classic()
)
df.data = read.csv(file = "EpStates_2.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_b_2_1,
participant,
order,
duration,
condition,
gender,
age) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_externally_caused",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_self_caused",
index)) %>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"mail_1"),
"mail_1",
index))%>%
mutate(index = ifelse(str_detect(index,"mail_2"),
"mail_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"external first",
ifelse(order == 2, "self first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 1: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="2",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_2=="1",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
####final with counterfacual responses: fewer categories
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("code"),
contains("detailed"),
-starts_with("cf"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"externally caused", "self-caused")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating",
ifelse(str_detect(condition, "code"), "counterfactual",
"counterfactual_specific"))))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(ignorance= ordered(ignorance, levels = c("self-caused", "externally caused"))) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_1' = "epistemic change",
'2_2' = "... self-caused",
'2_3' = "... externally caused",
'2_4' = "... externally caused",
'2_5' = "... self-caused",
'2_6' = "epistemic change",
'4' =  "environment")) %>%
mutate(counterfactual=factor(counterfactual, levels=c("causal action", "epistemic change", "... self-caused", "... externally caused", "environment", "X")))
### Dataframe just with CF Responses (non-sensical deleted) - Within
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
reshape(v.names="counterfactual", timevar="ignorance", idvar=c("participant", "scenario", "order"),
direction="wide") %>%
filter(`counterfactual.externally caused` != "X" ) %>% ###delete those participants who selected a non-sensical answer
reshape(idvar=c("participant", "scenario", "order"),
sep = ".", direction = "long") %>%  ###reshape back into long format
remove_rownames()
df.exp_cf2 <- df.exp_cf
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
df.exp_cf2 <- df.exp_cf %>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(ignorance) %>%
mutate(total=sum(n)/2,
freq=n/total)
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
df.exp_cf_desc2 <- df.exp_cf2%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
group_by(ignorance) %>%
mutate(total=sum(n),
freq=n/total)
View(df.exp_cf_desc2)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
####Create Dataframe for between subjects analysis
df.exp_long2 <- df.exp_long %>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
mixed(causal_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
library(afex)
df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
mixed(causal_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
C2  <- lmer(causal_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(C2)
C2  <- lmer(causal_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(C2)
emmeans(C2, list(pairwise ~ ignorance), adjust = "tukey")
df.exp_desc_ratings<- df.exp_long%>%
group_by(ignorance) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),#could have known rating
k_sd   = sd(know_rating),
k_se   = k_sd / sqrt(n()),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),#blame rating
b_sd   = sd(blame_rating),
b_se   = b_sd / sqrt(n()),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
View(df.exp_cf_desc)
View(df.exp_desc_ratings)
####Create Dataframe for between subjects analysis
df.exp_long2 <- df.exp_long %>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
############## Descriptives WITHIN
df.exp_desc_ratings2<- df.exp_long2%>%
group_by(ignorance) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),#could have known rating
k_sd   = sd(know_rating),
k_se   = k_sd / sqrt(n()),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),#blame rating
b_sd   = sd(blame_rating),
b_se   = b_sd / sqrt(n()),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
C2  <- lm(causal_rating ~ 1 + ignorance*scenario , df.exp_long2)
C2 %>% Anova()
library(car)
C2_posthoc <- emmeans(C2, pairwise ~ ignorance)
summary(C2_posthoc)
C2  <- lm(causal_rating ~ 1 + ignorance*scenario , df.exp_long2)
C2 %>% Anova()
View(df.exp_desc_ratings2)
C2_posthoc <- emmeans(C2, pairwise ~ ignorance)
summary(C2_posthoc)
C2 %>% Anova()
df.exp_cf <- within(df.exp_cf, ignorance <- relevel(ignorance, ref = 'self-caused'))
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf)
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf)
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf2<- df.exp_cf%>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf2)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf2)
VGAM::lrtest(vglm0, vglm1)
as.vector(1 - (LLf / LL0))
LLf   <- logLik(vglm1)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
summary(vglm1)
exp(coef(vglm1))
View(df.exp_cf_desc2)
CFExp2<-ggplot(df.exp_cf2, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of response") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys",  direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.text.y = element_text(color="black", size = 14, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 14))
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 14),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
CFExp2<-ggplot(df.exp_cf2, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of response") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys",  direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.text.y = element_text(color="black", size = 14, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 14))
CFExp2
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf2<- df.exp_cf%>%
filter(order == "external first" & ignorance == "externally caused" |order == "self first" & ignorance == "self-caused")
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf2)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf2)
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
df.exp_long <- within(df.exp_long, ignorance <- relevel(ignorance, ref = 'self-caused'))
K2b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K2b %>% Anova()
####post hoc tests
K2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
summary(K2b_posthoc)
K2b_posthoc <- emmeans(K2b, pairwise ~ scenario)
summary(K2b_posthoc)
K2b %>% Anova()
df.exp_desc_ratings2<- df.exp_long2%>%
group_by(scenario) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),#could have known rating
k_sd   = sd(know_rating),
k_se   = k_sd / sqrt(n()),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),#blame rating
b_sd   = sd(blame_rating),
b_se   = b_sd / sqrt(n()),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
K2b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K2b %>% Anova()
K2b_posthoc <- emmeans(K2b, pairwise ~ scenario)
summary(K2b_posthoc)
df.exp_desc_ratings2<- df.exp_long2%>%
group_by(scenario) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),#could have known rating
k_sd   = sd(know_rating),
k_se   = k_sd / sqrt(n()),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),#blame rating
b_sd   = sd(blame_rating),
b_se   = b_sd / sqrt(n()),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
K2b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K2b %>% Anova()
K2b_posthoc <- emmeans(K2b, pairwise ~ scenario)
summary(K2b_posthoc)
K2b  <- lm(know_rating ~ 1 + scenario , df.exp_long2)
K2b %>% Anova()
K2b_posthoc <- emmeans(K2b, pairwise ~ scenario)
summary(K2b_posthoc)
mixed(blame_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
B2  <- lmer(blame_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(B2)
mixed(blame_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
B2  <- lmer(blame_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(B2)
emmeans(B2, list(pairwise ~ ignorance), adjust = "tukey")
B2_posthoc <- emmeans(B2b, pairwise ~ scenario)
B2_posthoc <- emmeans(B2, pairwise ~ scenario)
summary(B2_posthoc)
summary(B2)
mixed(blame_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
B2_posthoc <- emmeans(B2, pairwise ~ scenario)
summary(B2_posthoc)
B2b  <- lm(blame_rating ~ 1 + ignorance*scenario , df.exp_long2)
B2b %>% Anova()
B2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
B2b  <- lm(blame_rating ~ 1 + ignorance*scenario , df.exp_long2)
B2b %>% Anova()
B2b_posthoc <- emmeans(K2b, pairwise ~ ignorance)
B2b_posthoc <- emmeans(B2b, pairwise ~ ignorance)
summary(B2b_posthoc)
df.exp_desc_ratings2<- df.exp_long2%>%
group_by(ignorance) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),#could have known rating
k_sd   = sd(know_rating),
k_se   = k_sd / sqrt(n()),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),#blame rating
b_sd   = sd(blame_rating),
b_se   = b_sd / sqrt(n()),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
df.exp_desc_ratings2<- df.exp_long2%>%
group_by(scenario) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),#could have known rating
k_sd   = sd(know_rating),
k_se   = k_sd / sqrt(n()),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),#blame rating
b_sd   = sd(blame_rating),
b_se   = b_sd / sqrt(n()),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
B2b_posthoc <- emmeans(B2b, pairwise ~ scenario)
summary(B2b_posthoc)
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual=="... self-caused" | counterfactual=="... externally caused")
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
S3 %>% Anova()
S4  <- lm(causal_rating ~ counterfactual*ignorance, df.exp_subgroup2)
S4 %>% Anova()
S4_posthoc <- emmeans(S4, pairwise ~ counterfactual |ignorance)
summary(S4_posthoc)
df.exp_desc_subgroup2<- df.exp_subgroup2 %>%
group_by(ignorance, counterfactual) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96
)
View(df.exp_subgroup2)
View(df.exp_subgroup2)
View(df.exp_desc_subgroup2)
