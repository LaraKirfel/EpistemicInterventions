mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 1: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(test_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(test_2=="2",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, counterfactual_1, counterfactual_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(counterfactual_1 != "0" | counterfactual_2 != "0")
#### counterfacual responses: fine grained categories
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("code"),
contains("detailed"),
-starts_with("cf"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"externally caused", "self-caused")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating",
ifelse(str_detect(condition, "code"), "counterfactual",
"counterfactual_specific"))))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "undoing causal action",
'2_1' = "direct epistemic change",
'2_2' = "by e-mail reading",
'2_3' = "e-mail made available",
'2_4' = "by someone else",
'2_5' = "by additional action of agent",
'2_6' = "epistemic state change about technical default",
'2_7' = "by reading deleted e-mail",
'4' =  "environment"))
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
#### counterfacual responses: fine grained categories
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("code"),
contains("detailed"),
-starts_with("cf"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"externally caused", "self-caused")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating",
ifelse(str_detect(condition, "code"), "counterfactual",
"counterfactual_specific"))))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "undoing causal action",
'2_1' = "direct epistemic change",
'2_2' = "by e-mail reading",
'2_3' = "e-mail made available",
'2_4' = "by someone else",
'2_5' = "by additional action of agent",
'2_6' = "epistemic state change about technical default",
'2_7' = "by reading deleted e-mail",
'4' =  "environment"))
df.exp_cf_desc <- df.exp_cf %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_long %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
View(df.exp_cf_desc)
####final with counterfacual responses - coarse -grained
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"))%>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"many actions", "few actions")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epistemic change",
'2_1' = "... by reading (at least) one more" ,
'2_2' = "... by reading all e-mails",
'2_3' = "... by other",
'2_4' = "... by other",
'3' = "... by other",
'4' =  "environment" )) %>%
mutate(counterfactual=factor(counterfactual, levels=c("causal action", "epistemic change", "... by reading (at least) one more", "... by reading all e-mails", "... by other", "environment", "X")))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
reshape(v.names="counterfactual", timevar="ignorance", idvar=c("participant", "scenario", "order"),
direction="wide") %>%
filter(`counterfactual.few actions` != "X" ) %>% ###delete those participants who selected a non-sensical answer
reshape(idvar=c("participant", "scenario", "order"),
sep = ".", direction = "long") %>%  ###reshape back into long format
remove_rownames()
df.exp_cf_desc <- df.exp_long%>%
group_by(ignorance, counterfactual) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
View(df.exp_cf_desc)
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
reshape(v.names="counterfactual", timevar="ignorance", idvar=c("participant", "scenario", "order"),
direction="wide") %>%
filter(`counterfactual.few actions` != "X" ) %>% ###delete those participants who selected a non-sensical answer
reshape(idvar=c("participant", "scenario", "order"),
sep = ".", direction = "long") %>%  ###reshape back into long format
remove_rownames()
df.exp_cf_desc <- df.exp_long%>%
group_by(ignorance, counterfactual) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
View(df.exp_cf_desc)
df.data = read.csv(file = "EpStates_3.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_b_2_1,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"test_1"),
"test_1",
index))%>%
mutate(index = ifelse(str_detect(index,"test_2"),
"test_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"dont know first",
ifelse(order == 2, "know first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 1: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(test_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(test_2=="2",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, counterfactual_1, counterfactual_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(counterfactual_1 != "0" | counterfactual_2 != "0")
####final with counterfacual responses - coarse -grained
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"))%>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"many actions", "few actions")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epistemic change",
'2_1' = "... by reading (at least) one more" ,
'2_2' = "... by reading all e-mails",
'2_3' = "... by other",
'2_4' = "... by other",
'3' = "... by other",
'4' =  "environment" )) %>%
mutate(counterfactual=factor(counterfactual, levels=c("causal action", "epistemic change", "... by reading (at least) one more", "... by reading all e-mails", "... by other", "environment", "X")))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
reshape(v.names="counterfactual", timevar="ignorance", idvar=c("participant", "scenario", "order"),
direction="wide") %>%
filter(`counterfactual.few actions` != "X" ) %>% ###delete those participants who selected a non-sensical answer
reshape(idvar=c("participant", "scenario", "order"),
sep = ".", direction = "long") %>%  ###reshape back into long format
remove_rownames()
df.exp_cf_desc <- df.exp_long%>%
group_by(ignorance, counterfactual) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
View(df.exp_cf_desc)
View(df.exp_long)
Few_actions <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails") %>%
filter(ignorance == "few actions")
few_actions_t <-
t.test(Externally_caused %>% filter(counterfactual=="... by reading (at least) one more" ) %>% pull(causal_rating),
Externally_caused %>% filter(counterfactual=="... by reading all e-mails") %>% pull(causal_rating),
var.equal = F) %>%
tidy()
Few_actions <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails") %>%
filter(ignorance == "few actions")
View(Few_actions)
few_actions_t <-
t.test(Few_actions %>% filter(counterfactual=="... by reading (at least) one more" ) %>% pull(causal_rating),
Externally_caused %>% filter(counterfactual=="... by reading all e-mails") %>% pull(causal_rating),
var.equal = T) %>%
tidy()
Few_actions <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails") %>%
filter(ignorance == "few actions")
View(Few_actions)
few_actions_t <-
t.test(Few_actions %>% filter(counterfactual=="... by reading (at least) one more" ) %>% pull(causal_rating),
Few_actions %>% filter(counterfactual=="... by reading all e-mails") %>% pull(causal_rating),
var.equal = T) %>%
tidy()
View(few_actions_t)
var.test(Few_actions %>% filter(counterfactual=="... by reading (at least) one more" ) %>% pull(causal_rating),
Few_actions %>% filter(counterfactual=="... by reading all e-mails") %>% pull(causal_rating))
few_actions_t <-
t.test(Few_actions %>% filter(counterfactual=="... by reading (at least) one more" ) %>% pull(causal_rating),
Few_actions %>% filter(counterfactual=="... by reading all e-mails") %>% pull(causal_rating),
var.equal = T) %>%
tidy()
View(few_actions_t)
t.test(causal_rating ~ counterfactual, data = Few_actions,
var.equal = TRUE, alternative = "less")
t.test(causal_rating ~ counterfactual, data = Few_actions,
var.equal = TRUE, alternative = "more")
t.test(causal_rating ~ counterfactual, data = Few_actions,
var.equal = TRUE, alternative = "greater")
# set ggplot theme
theme_set(
theme_classic()
)
df.data = read.csv(file = "EpStates_4_noInfo.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_outcome_a1_4,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_externally_caused",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_self_caused",
index)) %>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_look_a1"),
"look_a1",
index))%>%
mutate(index = ifelse(str_detect(index,"_look_a2"),
"look_a2",
index)) %>%
mutate(index = ifelse(str_detect(index,"_outcome_a1_"),
"outcome_a1",
index))%>%
mutate(index = ifelse(str_detect(index,"_outcome_a2_"),
"outcome_a2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"mail_1"),
"mail_1",
index))%>%
mutate(index = ifelse(str_detect(index,"mail_2"),
"mail_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"dont know first",
ifelse(order == 2, "know first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 1: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="2",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_2=="1",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, counterfactual_1, counterfactual_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(counterfactual_1 != "X" ) %>%
filter(counterfactual_2 != "X")
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = " ... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epist. change", "... by info", "... by info + e-mail reading", "... by other action of agent", " ... by someone else", "causal action", "... by e-mail reading", "environment"))) %>%
mutate(ignorance=factor(ignorance, levels= c("reads e-mail", "doesn't read e-mail")))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
df.exp_cf_desc <- df.exp_long%>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_long%>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
