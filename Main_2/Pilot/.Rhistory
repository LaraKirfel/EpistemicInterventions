theme(legend.position= "none")
plot(Fig2)
Fig2<-ggplot(df.exp_long, aes(x=code_detailed, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("relative frequencies") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")
plot(Fig2)
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
View(df.counterfactuals)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant")
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("code"),
contains("detailed"),
-starts_with("cf"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"externally caused", "self-caused")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating",
ifelse(str_detect(condition, "code"), "code_category",
"code_detailed"))))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating))
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("code"),
contains("detailed"),
-starts_with("cf"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"externally caused", "self-caused")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating",
ifelse(str_detect(condition, "code"), "code_category",
"code_detailed")))))
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
View(df.counterfactuals)
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
View(df.counterfactuals)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant")
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
View(df.exp)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_b_2_1,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_externally_caused",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_self_caused",
index)) %>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"mail_1"),
"mail_1",
index))%>%
mutate(index = ifelse(str_detect(index,"mail_2"),
"mail_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"dont know first",
ifelse(order == 2, "know first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("code"),
contains("detailed"),
-starts_with("cf"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"externally caused", "self-caused")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating",
ifelse(str_detect(condition, "code"), "code_category",
"code_detailed"))))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating))
Fig2<-ggplot(df.exp_long, aes(x=code_detailed, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("relative frequencies") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")
plot(Fig2)
Fig3a <- df.long %>%
select(ignorance=="externally caused")
Fig3a <- df.exp_long %>%
select(ignorance=="externally caused")
Fig3a <- df.exp_long %>%
filter(ignorance=="externally caused")
View(Fig3a)
Fig3a <- df.exp_long %>%
filter(ignorance=="externally caused") %>%
filter(code_detailed=="2_3" | code_detailed=="2_4")
Fig3a <- df.exp_long %>%
filter(ignorance=="externally caused") %>%
filter(code_detailed=="2_3" | code_detailed=="2_4") %>%
ggplot(aes(x=scenario, y=causal_rating, fill=code_detailed)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_violin(trim=F, scale = "count", adjust = 3, position=position_dodge(width=0.8), alpha=0.1, color = NA)+
geom_jitter(position = position_jitterdodge(jitter.height = 0.1, dodge.width = 0.8, jitter.width=0.2), alpha =
0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
labs( y="Causal Rating")+
theme_bw()+
myTheme
Fig3a
Fig3a <- df.exp_long %>%
filter(ignorance=="externally caused") %>%
filter(code_detailed=="2_3" | code_detailed=="2_4") %>%
ggplot(aes(x=code_detailed, y=causal_rating)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_violin(trim=F, scale = "count", adjust = 3, position=position_dodge(width=0.8), alpha=0.1, color = NA)+
geom_jitter(position = position_jitterdodge(jitter.height = 0.1, dodge.width = 0.8, jitter.width=0.2), alpha =
0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
labs( y="Causal Rating")+
theme_bw()+
myTheme
Fig3a
Fig3a <- df.exp_long %>%
filter(ignorance=="externally caused") %>%
filter(code_detailed=="2_3" | code_detailed=="2_4") %>%
ggplot(aes(x=code_detailed, y=causal_rating)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_violin(trim=F, scale = "count", adjust = 3, width=0.8, alpha=0.1, color = NA)+
geom_jitter(height = 0.1, width = 0.8, width=0.2, alpha =  0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
labs( y="Causal Rating")+
theme_bw()+
myTheme
Fig3a <- df.exp_long %>%
filter(ignorance=="externally caused") %>%
filter(code_detailed=="2_3" | code_detailed=="2_4") %>%
ggplot(aes(x=code_detailed, y=causal_rating)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_violin(trim=F, scale = "count", adjust = 3, width=0.8, alpha=0.1, color = NA)+
geom_jitter(height = 0.1, width = 0.8, alpha =  0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
labs( y="Causal Rating")+
theme_bw()+
myTheme
Fig3a
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("nlme")
# set ggplot theme
theme_set(
theme_classic()
)
df.data = read.csv(file = "EpStates_2.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_b_2_1,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_externally_caused",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_self_caused",
index)) %>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"mail_1"),
"mail_1",
index))%>%
mutate(index = ifelse(str_detect(index,"mail_2"),
"mail_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"dont know first",
ifelse(order == 2, "know first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 1: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==4) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("nlme")
# set ggplot theme
theme_set(
theme_classic()
)
df.data = read.csv(file = "EpStates_1.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.data = read.csv(file = "EpStates_1.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_cf_2,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_no_knowledge",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_knowledge",
index)) %>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(order = ifelse(order == 1,"dont know first",
ifelse(order == 2, "know first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 1: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==4) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, code_1, detailed_1, code_2, detailed_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(code_1 != "0")
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("code"),
contains("detailed"))%>%
gather(condition, rating, "cause_1":"detailed_2") %>%
mutate(knowledge = ifelse(str_detect(condition, "1"),
"No Knowledge", "Knowledge")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "code"), "counterfactual",
"counterfactual_specific"))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(knowledge=as.factor(knowledge)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(counterfactual=recode(counterfactual,
`1` ="action",
`2` ="epistemic state",
`3` = "other_agent",
`4` = "other_circumstances"))
C1_m1 <- lmer(causal_rating ~ knowledge +(1+knowledge|participant), df.exp_long, REML=F)
C1_m1 <- lmer(causal_rating ~ knowledge +(1|participant), df.exp_long, REML=F)
C1_m1
confint(C1_m1)
C1_m1
summary(C1_m1)
intervals(C1_m1)
summary(C1_m1)
C1_m4 <- lmer(causal_rating ~ knowledge * scenario +(1+Knowledge |participant), df.exp_long, REML=F)
C1_m4 <- lmer(causal_rating ~ knowledge * scenario +(1+Knowledge |participant), df.exp_long, REML=F)
View(df.exp_long)
C1_m3 <- lmer(causal_rating ~ knowledge +scenario + (1|participant), df.exp_long, REML=F)
C1_m3 <- lmer(causal_rating ~ 1+ knowledge +scenario + (1+knowledge |participant), df.exp_long, REML=F)
C1_m3 <- lmer(causal_rating ~ knowledge +scenario + (1+knowledge |participant), df.exp_long, REML=F)
C1_m1 <- lmer(causal_rating ~ knowledge +(1|participant/scenario), df.exp_long, REML=F)
C1_m1 <- lmer(causal_rating ~ knowledge +(1+scenario|participant), df.exp_long, REML=F)
