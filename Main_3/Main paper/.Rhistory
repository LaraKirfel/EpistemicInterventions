scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_jitter(height = 0.1, width = 0.1, alpha =  0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
#geom_violin(trim=F, scale = "count", adjust = 3, position=position_dodge(width=0.8), alpha=0.1, color = NA)+
scale_fill_manual(values=c("gray42", "gray72"), name="blank")+
facet_wrap(~ignorance)+
geom_text(data= df.text,
aes(label = N,
y = 3.5,
x = counterfactual)
) +
labs(x= "Epistemic state change")+
labs(y="Causal Rating")+
labs(title="Epistemic Actions")+
theme_bw()+
myTheme+
theme(axis.text.x = element_text(angle = 15, hjust = 0.95, color="black", size = 14),
legend.position= "none")
Fig3c
library("car")
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails")
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
mixed(causal_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
C3  <- lmer(causal_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(C3)
C3  <- lm(causal_rating ~ 1 + ignorance*scenario, df.exp_long2)
C3 %>% Anova()
View(df.exp_cf_desc)
myTheme <-   theme(plot.title=element_text(size=18,
face="bold",
hjust=0.5,
lineheight=1.2),
axis.title.y = element_text(color="black", size = 14, vjust=.9),
axis.title.x = element_text(color="black", size = 14, vjust=.9),
axis.text.x =  element_text(color="black", size = 14, vjust=.9),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.title = element_text(color="black", size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
df.text <- data.frame(
ignorance = c("few actions", "few actions", "many actions",  "many actions"),
counterfactual = c("... by reading (at least) one more" , "... by reading all e-mails", "... by reading (at least) one more" , "... by reading all e-mails" ),
N = c("N = 28", "N = 49", "N = 1", "N = 72")
)
Fig3c <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails") %>%
ggplot(aes(x=counterfactual, y=causal_rating, fill=counterfactual)) +
coord_cartesian(ylim = c(1,7)) +
scale_y_continuous(breaks = seq(0, 7, by=1))+
geom_jitter(height = 0.1, width = 0.1, alpha =  0.3, colour = "grey")+
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(width = 0.8), width = 0.2,
size = 1, shape = 21) +
#geom_violin(trim=F, scale = "count", adjust = 3, position=position_dodge(width=0.8), alpha=0.1, color = NA)+
scale_fill_manual(values=c("gray42", "gray72"), name="blank")+
facet_wrap(~ignorance)+
geom_text(data= df.text,
aes(label = N,
y = 3.5,
x = counterfactual)
) +
labs(x= "Epistemic state change")+
labs(y="Causal Rating")+
labs(title="Epistemic Actions")+
theme_bw()+
myTheme+
theme(axis.text.x = element_text(angle = 15, hjust = 0.95, color="black", size = 14),
legend.position= "none")
Fig3c
ggsave(Fig3c, file="Fig3c.pdf", dpi=400, height = 5, width = 8)
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails")
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails")
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
S3 %>% Anova()
S4  <- lm(causal_rating ~ counterfactual*ignorance, df.exp_subgroup2)
S4 %>% Anova()
S4_posthoc <- emmeans(S4, pairwise ~ counterfactual |ignorance)
summary(S4_posthoc)
B3  <- lm(causal_rating ~ 1 + ignorance*scenario , df.exp_long2)
B3 %>% Anova()
####post hoc tests
B3_posthoc <- emmeans(B3, pairwise ~ ignorance)
summary(B3_posthoc)
B3  <- lm(blame_rating ~ 1 + ignorance*scenario , df.exp_long2)
B3 %>% Anova()
K3  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K3 %>% Anova()
K3_posthoc <- emmeans(K3, pairwise ~ ignorance|Scenario)
K3_posthoc <- emmeans(K3, pairwise ~ ignorance|scenario)
summary(K3_posthoc)
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
mixed(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, method = 'LRT')
K2R  <- lmer(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, REML=T)
K2R
mixed(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, method = 'LRT')
mixed(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, method = 'LRT')
K2R  <- lmer(causal_rating ~ignorance*know_rating + (1 | participant), df.exp_long, REML=T)
K3Rb  <- lm(causal_rating ~ignorance*know_rating , df.exp_long2)
K3Rb %>% Anova()
B3Rb  <- lm(blame_rating ~ignorance*know_rating , df.exp_long2)
B3Rb %>% Anova()
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
#ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
View(df.exp_cf_desc)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("nlme")
library("ggpubr")
# set ggplot theme
theme_set(
theme_classic()
)
df.data = read.csv(file = "EpStates_3.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_b_2_1,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"test_1"),
"test_1",
index))%>%
mutate(index = ifelse(str_detect(index,"test_2"),
"test_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"many actions first",
ifelse(order == 2, "few actions first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 3: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(test_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(test_2=="2",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8)
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, counterfactual_1, counterfactual_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(counterfactual_1 != "0" | counterfactual_2 != "0")
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, counterfactual_1, counterfactual_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(counterfactual_1 != "0" | counterfactual_2 != "0")
df.exp_demo <- df.exp %>%
select(age, gender, duration) %>%
mutate(age=as.numeric(age)) %>%
transform(gender= ifelse(gender==1, "Male", #recode numbers into gender categories
ifelse(gender==2, "Female",
ifelse(gender==3, "Prefer not to say", gender)))) %>%
filter(age<100 |age ==" ") %>% #remove outliers (year) or N.A.s
summarize(n=n(),
female=sum(gender=="Female"),
not_say=sum(gender=="Prefer not to say"),
mean_age = mean(age),
std_age=sd(age),
mean_time=mean(duration/60),
sd_time=sd(duration/60)
)
View(df.exp_demo)
####final with counterfacual responses - coarse -grained
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"))%>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"many actions", "few actions")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epistemic change",
'2_1' = "... by reading (at least) one more" ,
'2_2' = "... by reading all e-mails",
'2_3' = "... by other",
'2_4' = "... by other",
'3' = "... by other",
'4' =  "environment" )) %>%
mutate(counterfactual=factor(counterfactual, levels=c("causal action", "epistemic change", "... by reading (at least) one more", "... by reading all e-mails", "... by other", "environment", "X")))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
reshape(v.names="counterfactual", timevar="ignorance", idvar=c("participant", "scenario", "order"),
direction="wide") %>%
filter(`counterfactual.few actions` != "X" ) %>% ###delete those participants who selected a non-sensical answer
reshape(idvar=c("participant", "scenario", "order"),
sep = ".", direction = "long") %>%  ###reshape back into long format
remove_rownames()
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
#ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
df.exp_cf2<- df.exp_cf%>%
filter(order == "few actions first" & ignorance == "few actions" |order == "many actions first" & ignorance == "many actions")
df.exp_cf_desc2 <- df.exp_cf2%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
group_by(ignorance) %>%
mutate(total=sum(n),
freq=n/total)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
reshape(v.names="counterfactual", timevar="ignorance", idvar=c("participant", "scenario", "order"),
direction="wide") %>%
filter(`counterfactual.few actions` != "X" ) %>% ###delete those participants who selected a non-sensical answer
reshape(idvar=c("participant", "scenario", "order"),
sep = ".", direction = "long") %>%  ###reshape back into long format
remove_rownames()
df.exp_cf2<- df.exp_cf%>%
filter(order == "few actions first" & ignorance == "few actions" |order == "many actions first" & ignorance == "many actions")
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
View(df.exp_cf)
View(df.exp_cf)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n())
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
ungroup(counterfactual)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n())
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
ungroup(counterfactual)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
library(VGAM)
df.exp_cf <- within(df.exp_cf, ignorance <- relevel(ignorance, ref = 'many actions'))
VGAM::lrtest(vglm0, vglm1)
library(VGAM)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf)
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
df.exp_cf2 <- within(df.exp_cf2, ignorance <- relevel(ignorance, ref = 'many actions'))
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf2)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf2)
View(df.exp_cf_desc2)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="causal action"), df.exp_cf2)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="causal action"), df.exp_cf2)
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
exp(coef(vglm1))
CFExp3<-ggplot(df.exp_cf2, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of responses") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys", direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(
axis.text.x = element_text(angle = 25, hjust = 1, color="black", size = 14))
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 14, vjust=.9),
axis.text.x = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 14),
strip.text.x = element_text(color="black", size = 14),
legend.text = element_text(color="black", size = 14),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
CFExp3<-ggplot(df.exp_cf2, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of responses") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys", direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(
axis.text.x = element_text(angle = 25, hjust = 1, color="black", size = 14))
CFExp3
head(depvar(vglm1))
colSums(depvar(vglm1))
as.vector(1 - (LLf / LL0))
LLf   <- logLik(vglm1)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
summary(vglm1)
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails")
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
library("afex")
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails")
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
S1  <- lmer(causal_rating ~  counterfactual *ignorance+ (1 | participant),df.exp_subgroup, REML=T)
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails")
####Create Dataframe for between subjects analysis
df.exp_long2 <- df.exp_long %>%
filter(order == "few actions first" & ignorance == "few actions" |order == "many actions first" & ignorance == "many actions")
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual=="... by reading (at least) one more" | counterfactual=="... by reading all e-mails")
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
S3 %>% Anova()
library("car")
library("afex")
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
S3 %>% Anova()
S3  <- lm(causal_rating ~  ignorance + counterfactual, df.exp_subgroup2)
S3 %>% Anova()
K3Rb  <- lm(causal_rating ~ignorance*know_rating , df.exp_long2)
K3Rb %>% Anova()
summary(K3Rb)
B3Rb  <- lm(blame_rating ~ignorance*know_rating , df.exp_long2)
B3Rb %>% Anova()
summary(B3Rb)
B3_posthoc <- emmeans(B3Rb, pairwise ~ know_rating | ignorance)
summary(B3_posthoc)
summary(B3Rb)
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
#ungroup(counterfactual) %>%
mutate(total=sum(n)/2,
freq=n/total)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("afex")
library("nlme")
#library("emmeans")
