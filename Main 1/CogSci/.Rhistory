knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("nlme")
library("afex")
library("mlogit")
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("nlme")
library("afex")
library("mlogit")
# set ggplot theme
theme_set(
theme_classic()
)
df.data = read.csv(file = "EpStates_1.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
df.data = read.csv(file = "EpStates_4_noInfo.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_outcome_a1_4,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_externally_caused",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_self_caused",
index)) %>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_look_a1"),
"look_a1",
index))%>%
mutate(index = ifelse(str_detect(index,"_look_a2"),
"look_a2",
index)) %>%
mutate(index = ifelse(str_detect(index,"_outcome_a1_"),
"outcome_a1",
index))%>%
mutate(index = ifelse(str_detect(index,"_outcome_a2_"),
"outcome_a2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"mail_1"),
"mail_1",
index))%>%
mutate(index = ifelse(str_detect(index,"mail_2"),
"mail_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"dont know first",
ifelse(order == 2, "know first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 1: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="2",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_2=="1",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, counterfactual_1, counterfactual_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(counterfactual_1 != "X" ) %>%
filter(counterfactual_2 != "X")
##########
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = " ... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epist. change", "... by info", "... by info + e-mail reading", "... by other action of agent", " ... by someone else", "causal action", "... by e-mail reading", "environment"))) %>%
mutate(ignorance=factor(ignorance, levels= c("reads e-mail", "doesn't read e-mail")))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
####Look and Outcome Ratings
df.exp_long2 = df.exp %>%
select(scenario,
order,
participant,
contains("look"),
contains("outcome"),
-starts_with("cf"))%>%
gather(condition, rating, "look_a1":"outcome_a2") %>%
mutate(ignorance = ifelse(str_detect(condition, "_a1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "look"),"look_rating", "outcome_rating"
))%>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(look_rating=as.numeric(look_rating)) %>%
mutate(outcome_rating=as.numeric(outcome_rating)) %>%
mutate(ignorance=factor(ignorance, levels= c("reads e-mail", "doesn't read e-mail")))
CFExp4<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys", direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.title.y = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 12, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 18, vjust=.9),
axis.text.x = element_text(color="black", size = 18),
axis.text.y = element_text(color="black", size = 18),
strip.text.x = element_text(color="black", size = 18),
legend.text = element_text(color="black", size = 18),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))
CFExp4<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys", direction=-1)+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.title.y = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 12, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
CFExp4
ggsave(CFExp4, file="CFExp4.jpeg", dpi=400, height = 4, width = 5)
