contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = " ... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epistemic change", "... by info", "... by info + e-mail reading", "... by other action of agent", " ... by someone else"))) %>%
mutate(ignorance=factor(ignorance, levels= c("reads e-mail", "doesn't read e-mail")))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
CFExp3<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.text.y = element_text(color="black", size = 14, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
CFExp3
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = " ... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epist. change", "... by info", "... by info + e-mail reading", "... by other action of agent", " ... by someone else"))) %>%
mutate(ignorance=factor(ignorance, levels= c("reads e-mail", "doesn't read e-mail")))
View(df.exp_long)
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating))
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = " ... by someone else",
'4' =  "environment" ))
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = " ... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epist. change", "... by info", "... by info + e-mail reading", "... by other action of agent", " ... by someone else", "causal action", "... by e-mail reading", "environment"))) %>%
mutate(ignorance=factor(ignorance, levels= c("reads e-mail", "doesn't read e-mail")))
df.exp_cf_desc <- df.exp_long%>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
View(df.exp_cf_desc)
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
### Dataframe just with CF Responses (non-sensical deleted)
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
CFExp3<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.text.y = element_text(color="black", size = 14, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
CFExp3
ggsave(CFExp3, file="CFExp3.jpeg", dpi=400, height = 4, width = 5)
vglm2 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epistemic change"), df.exp_cf)
vglm2 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epist. change"), df.exp_cf)
vglm0 <- vglm(counterfactual ~ +1, family=multinomial(refLevel="epist. change"), df.exp_cf)
VGAM::lrtest(vglm0, vglm2)
sum1   <- summary(vglm2)
sum1
CFExp3<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.text.y = element_text(color="black", size = 12, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
CFExp3
ggsave(CFExp3, file="CFExp3.jpeg", dpi=400, height = 4, width = 5)
CFExp3<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.text.y = element_text(color="black", size = 10, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
CFExp3
ggsave(CFExp3, file="CFExp3.jpeg", dpi=400, height = 4, width = 5)
CFExp3<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.title.y = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
CFExp3
ggsave(CFExp3, file="CFExp3.jpeg", dpi=400, height = 4, width = 5)
CFExp3<-ggplot(df.exp_cf, aes(x=counterfactual, group=ignorance))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of choice") +
facet_wrap(~ignorance)+
scale_fill_brewer(palette="Greys")+
theme_bw()+
myTheme+
theme(legend.position= "none")+
theme(axis.title.y = element_text(color="black", size = 14),
axis.text.y = element_text(color="black", size = 12, margin = margin (r=0, l=0)),
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 12),
strip.text.x = element_text(size = 12))
CFExp3
ggsave(CFExp3, file="CFExp3.jpeg", dpi=400, height = 4, width = 5)
df.exp_cf_desc <- df.exp_long%>%
group_by(counterfactual) %>%
summarize(n=n()) %>%
mutate(freq=prop.table(n))
VGAM::lrtest(vglm0, vglm2)
as.vector(1 - (LLf / LL0))
LLf   <- logLik(vglm2)
LL0   <- logLik(vglm0)
as.vector(1 - (LLf / LL0))
exp(coef(vglm2))
VGAM::lrtest(vglm0, vglm2)
summary(vglm2)
exp(coef(vglm2))
coefMN <- coef(sum1)
coefMN
exp(coef(vglm2))
summary(vglm2)
exp(coef(vglm2))
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.2, height = 0.1) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.3, height = 0.3) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
ggsave(FFCExp3, file="FFCExp3.jpeg", dpi=400, height = 3, width = 4)
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.3, height = 0.3, alpha = 0.2) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
ggsave(FFCExp3, file="FFCExp3.jpeg", dpi=400, height = 3, width = 4)
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.4, height = 0.4, alpha = 0.1) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.4, height = 0.4, alpha = 0.6) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
ggsave(FFCExp3, file="FFCExp3.jpeg", dpi=400, height = 3, width = 4)
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.4, height = 0.4, alpha = 0.5) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
ggsave(FFCExp3, file="FFCExp3.jpeg", dpi=400, height = 3, width = 4)
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.5, height = 0.5, alpha = 0.4) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
ggsave(FFCExp3, file="FFCExp3.jpeg", dpi=400, height = 3, width = 4)
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=1, position = "jitter", width = 0.5, height = 0.5, alpha = 0.4) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
ggsave(FFCExp3, file="FFCExp3.jpeg", dpi=400, height = 3, width = 4)
FFCExp3<-  ggplot(df.exp_long2, aes(x=look_rating, y=outcome_rating, color=ignorance, shape=ignorance)) +
geom_point(size=2, position = "jitter", width = 0.5, height = 0.3, alpha = 0.4) +
geom_smooth(method=lm, se=F, fullrange=F, aes(fill=ignorance))+
theme_bw()+
theme_cowplot()+
scale_fill_manual(values=c("#999999", "#E69F00"), name="blank")+
scale_colour_manual(values=c("#999999", "#E69F00"), name="blank")+
xlab("Likelihood of reading future e-mail") + ylab("Likelihood of future outcome")+
theme(axis.title.x  = element_text(color="black", size = 12, vjust=.9),
axis.title.y = element_text(color="black", size = 12),
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
strip.text.x = element_text(color="black", size = 12),
legend.text = element_text(color="black", size = 12),
legend.position = "top",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
scale_shape(guide=FALSE)
FFCExp3
ggsave(FFCExp3, file="FFCExp3.jpeg", dpi=400, height = 3, width = 4)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("afex")
library("nlme")
mixed(know_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
K4  <- lmer(know_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(K4)
mixed(blame_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
View(df.exp_desc_1)
