mean_time=mean(duration/60),
sd_time=sd(duration/60)
)
df.exp_desc <- df.exp_long %>%
select(participant, ignorance, counterfactual) %>%
group_by(ignorance, counterfactual) %>%
summarize(n=n())
##########-------------------------- Descriptives: Between
df.exp_desc_1<- df.exp_long%>%
group_by(ignorance) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),
K_sd   = sd(know_rating),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),
b_sd   = sd(blame_rating),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
##########-------------------------- Descriptives: within
df.exp_desc_2<- df.exp_long2%>%
group_by(ignorance) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),
K_sd   = sd(know_rating),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),
b_sd   = sd(blame_rating),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
##########-------------------------- Descriptives: Forward Looking
df.exp_desc_f<- df.exp_long_f%>%
group_by( scenario, ignorance) %>%
summarise(n=n(),
l_mean = mean(look_rating),#causal rating
l_sd   = sd(look_rating),
o_mean = mean(outcome_rating),
o_sd   = sd(outcome_rating)
)
#Counterfactual responses
##########
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = "... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epist. change", "... by info", "... by info + e-mail reading", "... by other action of agent", "... by someone else", "causal action", "... by e-mail reading", "environment"))) %>%
mutate(ignorance=factor(ignorance, levels= c( "doesn't read e-mail", "reads e-mail")))
### Dataframe just with CF Responses
#### delete those with less than 5% reponses
------------------- # Within
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
df.exp_cf2<- df.exp_cf%>%
filter(order == "doesn't read e-mail first" & ignorance == "doesn't read e-mail" |order == "reads e-mail first" & ignorance == "reads e-mail")
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(ignorance, counterfactual) %>%
summarize(n=n()) %>%
ungroup(ignorance) %>%
mutate(freq =
case_when(ignorance == "doesn't read e-mail" ~ n / 116,
ignorance == "reads e-mail" ~ n / 125)
)
------------------- # Between
df.exp_cf_desc2 <- df.exp_cf2%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
group_by(ignorance) %>%
mutate(total=sum(n),
freq=n/total)
df.exp_cf2<- df.exp_cf%>%
filter(order == "doesn't read e-mail first" & ignorance == "doesn't read e-mail" |order == "reads e-mail first" & ignorance == "reads e-mail")
df.exp_cf_desc2 <- df.exp_cf2%>%
select(scenario, counterfactual, ignorance) %>%
group_by(counterfactual, ignorance) %>%
summarize(n=n()) %>%
ungroup(counterfactual) %>%
group_by(ignorance) %>%
mutate(total=sum(n),
freq=n/total)
vglm1 <- vglm(counterfactual ~ ignorance, family=multinomial(refLevel="epist. change"), df.exp_cf)
df.exp_cf <- within(df.exp_cf, ignorance <- relevel(ignorance, ref = "reads e-mail"))
library(VGAM)
df.exp_cf2 <- within(df.exp_cf2, ignorance <- relevel(ignorance, ref = "reads e-mail"))
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
exp(coef(vglm1))
VGAM::lrtest(vglm0, vglm1)
summary(vglm1)
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual== "... by info" | counterfactual=="... by info + e-mail reading" | counterfactual=="... by other action of agent" )
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
library("car")
library("emmeans")
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
library(afex)
df.exp_subgroup <- df.exp_long %>%
filter(counterfactual== "... by info" | counterfactual=="... by info + e-mail reading" | counterfactual=="... by other action of agent" )
mixed(causal_rating ~ ignorance+counterfactual + (1 | participant), df.exp_subgroup, method = 'LRT')
S4  <- lmer(causal_rating ~  counterfactual *ignorance+ (1 | participant),df.exp_subgroup, REML=T)
S4_posthoc = emmeans(S4, specs = pairwise ~ counterfactual | ignorance)
summary(S4_posthoc)
df.exp_subgroup2 <- df.exp_long2 %>%
filter(counterfactual== "... by info" | counterfactual=="... by info + e-mail reading" | counterfactual=="... by other action of agent" )
S3  <- lm(causal_rating ~ counterfactual + ignorance, df.exp_subgroup2)
S3 %>% Anova()
S4  <- lm(causal_rating ~ counterfactual*ignorance, df.exp_subgroup2)
S4 %>% Anova()
S4_posthoc <- emmeans(S4, pairwise ~ counterfactual |ignorance)
summary(S4_posthoc)
df.exp_desc_subgroup2<- df.exp_subgroup2 %>%
group_by(ignorance, counterfactual) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96
)
df.exp_desc_subgroup2
View(df.exp_subgroup2)
View(df.exp_desc_subgroup2)
summary(S4_posthoc)
View(df.exp_desc_2)
mixed(know_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
K4  <- lmer(know_rating ~ 1 + ignorance*scenario + (1 | participant), df.exp_long, REML=T)
summary(K4)
mixed(know_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
summary(K4)
mixed(know_rating ~ 1 + ignorance*scenario +  (1 | participant), df.exp_long, method = 'LRT')
K4b  <- lm(know_rating ~ 1 + ignorance*scenario , df.exp_long2)
K4b %>% Anova()
summmary(K4b)
summary(K4b)
K4Rb  <- lm(causal_rating ~ignorance*know_rating , df.exp_long2)
K4Rb %>% Anova()
summary(K4Rb)
K4Rb  <- lm(causal_rating ~ignorance*know_rating , df.exp_long2)
K4Rb %>% Anova()
summary(K4Rb)
B4Rb  <- lm(blame_rating ~ignorance*know_rating , df.exp_long2)
B4Rb %>% Anova()
summary(B4Rb)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("pastecs")
library("reshape")
library("knitr")
library("lubridate")
library("lsr")
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("broom") # for tidy regression results
library("tidyverse") # for data wrangling, visualization, etc.
library("ez")
library("schoRsch")
library("lme4")
library("stringr")
library("dplyr")
library("nlme")
# set ggplot theme
theme_set(
theme_classic()
)
df.data = read.csv(file = "EpStates_4_noInfo.csv", stringsAsFactors = F, sep = ",") %>%
filter(row_number() > 2) %>% # additional rows in qualtrics csv
clean_names() %>%
filter(distribution_channel != "preview",
!condition =="", #exclude bot fails,
progress ==100| progress==99|progress==98)
df.exp = df.data %>%
mutate(participant = 1:n()) %>%
rename(duration=duration_in_seconds) %>%
mutate(duration=as.numeric(duration)) %>%
select(h_check_fact_1:b_outcome_a1_4,
participant,
order,
duration,
condition,
gender,
age,
-starts_with("q")
) %>%
gather("index", "value", -c(age, gender, participant, condition, duration, order))%>%
filter(value != "") %>%
arrange(index)%>%
mutate(index = ifelse(str_detect(index,"_c_1"),
"cause_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_c_2"),
"cause_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_1"),
"cf_externally_caused",
index))%>%
mutate(index = ifelse(str_detect(index,"_cf_2"),
"cf_self_caused",
index)) %>%
mutate(index = ifelse(str_detect(index,"_k_1"),
"could_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_k_2"),
"could_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_1"),
"blame_1",
index))%>%
mutate(index = ifelse(str_detect(index,"_b_2"),
"blame_2",
index))%>%
mutate(index = ifelse(str_detect(index,"_look_a1"),
"look_a1",
index))%>%
mutate(index = ifelse(str_detect(index,"_look_a2"),
"look_a2",
index)) %>%
mutate(index = ifelse(str_detect(index,"_outcome_a1_"),
"outcome_a1",
index))%>%
mutate(index = ifelse(str_detect(index,"_outcome_a2_"),
"outcome_a2",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_1"),
"fact_1",
index))%>%
mutate(index = ifelse(str_detect(index,"fact_2"),
"fact_2",
index))%>%
mutate(index = ifelse(str_detect(index,"know_1"),
"know_1",
index))%>%
mutate(index = ifelse(str_detect(index,"know_2"),
"know_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"mail_1"),
"mail_1",
index))%>%
mutate(index = ifelse(str_detect(index,"mail_2"),
"mail_2",
index)) %>%
mutate(index = ifelse(str_detect(index,"read_1"),
"read_1",
index))%>%
mutate(index = ifelse(str_detect(index,"read_2"),
"read_2",
index)) %>%
mutate(order = ifelse(order == 1,"reads e-mail first",
ifelse(order == 2, "doesn't read e-mail first", " ")))%>%
mutate(scenario = ifelse(condition == 1,"hospital",
ifelse(condition == 2, "garden",
ifelse(condition == 3, "bakery", " "))))%>%
spread(index, value) %>%
arrange(participant)
####Experiment 4: Create filter
df.exp<- df.exp%>%
mutate(check_total=if_else(know_1=="2", 1, 0)) %>%
mutate(check_total=if_else(know_2 =="2", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_1 =="1", check_total+1, check_total)) %>%
mutate(check_total=if_else(fact_2=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(read_2=="2",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_1=="1",  check_total+1, check_total)) %>%
mutate(check_total=if_else(mail_2=="1",  check_total+1, check_total))
#### Set filter
df.exp<-df.exp %>%
filter(check_total ==8) ####Set to 4 to change exlusion criterion to "all check questions correct"
df.counterfactuals<-read.csv("Counterfactuals_analysed.csv") %>%
select(participant, counterfactual_1, counterfactual_2)
df.exp<-df.exp %>%
inner_join(df.counterfactuals, by="participant") %>%
filter(counterfactual_1 != "X" ) %>%
filter(counterfactual_2 != "X")
####Experiment 4
###Demographics
df.exp_demo <- df.exp %>%
select(age, gender, duration) %>%
mutate(age=as.numeric(age)) %>%
transform(gender= ifelse(gender==1, "Male", #recode numbers into gender categories
ifelse(gender==2, "Female",
ifelse(gender==3, "Prefer not to say", gender)))) %>%
filter(age<100 |age ==" ") %>% #remove outliers (year) or N.A.s
summarize(n=n(),
female=sum(gender=="Female"),
not_say=sum(gender=="Prefer not to say"),
mean_age = mean(age),
std_age=sd(age),
mean_time=mean(duration/60),
sd_time=sd(duration/60)
)
df.exp_desc <- df.exp_long %>%
select(participant, ignorance, counterfactual) %>%
group_by(ignorance, counterfactual) %>%
summarize(n=n())
##########-------------------------- Descriptives: Between
df.exp_desc_1<- df.exp_long%>%
group_by(ignorance) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),
K_sd   = sd(know_rating),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),
b_sd   = sd(blame_rating),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
##########-------------------------- Descriptives: within
df.exp_desc_2<- df.exp_long2%>%
group_by(ignorance) %>%
summarise(c_mean = mean(causal_rating),#causal rating
c_sd   = sd(causal_rating),
c_se   = c_sd / sqrt(n()),
c_upper_ci = c_mean+c_se*1.96,
c_lower_ci = c_mean-c_se*1.96,
k_mean = mean(know_rating),
K_sd   = sd(know_rating),
k_upper_ci = k_mean+c_se*1.96,
k_lower_ci = k_mean-c_se*1.96,
b_mean = mean(blame_rating),
b_sd   = sd(blame_rating),
b_upper_ci = b_mean+c_se*1.96,
b_lower_ci = b_mean-c_se*1.96
)
##########-------------------------- Descriptives: Forward Looking
df.exp_desc_f<- df.exp_long_f%>%
group_by( scenario, ignorance) %>%
summarise(n=n(),
l_mean = mean(look_rating),#causal rating
l_sd   = sd(look_rating),
o_mean = mean(outcome_rating),
o_sd   = sd(outcome_rating)
)
#Counterfactual responses
##########
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = "... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epist. change", "... by info", "... by info + e-mail reading", "... by other action of agent", "... by someone else", "causal action", "... by e-mail reading", "environment"))) %>%
mutate(ignorance=factor(ignorance, levels= c( "doesn't read e-mail", "reads e-mail")))
### Dataframe just with CF Responses
#### delete those with less than 5% reponses
------------------- # Within
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
df.exp_cf<- df.exp_long %>%
select(participant, scenario, order, ignorance, counterfactual) %>%
filter(!str_detect(counterfactual, 'causal action')) %>%
filter(!str_detect(counterfactual, 'environment')) %>%
filter(!str_detect(counterfactual, '... by e-mail reading'))
df.exp_cf2<- df.exp_cf%>%
filter(order == "doesn't read e-mail first" & ignorance == "doesn't read e-mail" |order == "reads e-mail first" & ignorance == "reads e-mail")
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(ignorance, counterfactual) %>%
summarize(n=n()) %>%
ungroup(ignorance) %>%
mutate(freq =
case_when(ignorance == "doesn't read e-mail" ~ n / 116,
ignorance == "reads e-mail" ~ n / 125)
)
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by(ignorance, counterfactual) %>%
summarize(n=n())
View(df.exp_cf_desc)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by( counterfactual) %>%
summarize(n=n())
View(df.exp_cf_desc)
#Counterfactual responses
##########
df.exp_long = df.exp %>%
select(scenario,
order,
participant,
contains("cause"),
contains("could"),
contains("blame"),
contains("counterfactual_"),
-starts_with("cf")
) %>%
gather(condition, rating, "cause_1":"counterfactual_2") %>%
mutate(ignorance = ifelse(str_detect(condition, "1"),
"reads e-mail", "doesn't read e-mail")) %>%
mutate(condition = ifelse(str_detect(condition, "cause"),"causal_rating",
ifelse(str_detect(condition, "could"), "know_rating",
ifelse(str_detect(condition, "blame"), "blame_rating", "counterfactual"
)))) %>%
spread(condition, rating) %>%
mutate(scenario=as.factor(scenario)) %>%
mutate(ignorance=as.factor(ignorance)) %>%
mutate(causal_rating=as.numeric(causal_rating)) %>%
mutate(know_rating=as.numeric(know_rating)) %>%
mutate(blame_rating=as.numeric(blame_rating)) %>%
mutate(counterfactual=recode(counterfactual,
'1' = "causal action",
'2_0' = "epist. change",
'2_2_1' = "... by e-mail reading",
'2_1' = "... by info" ,
'2_2' = "... by info + e-mail reading",
'2_3' = "... by other action of agent",
'2_4' = "... by someone else",
'4' =  "environment" ))%>%
mutate(counterfactual=factor(counterfactual, levels=c("epist. change", "... by info", "... by info + e-mail reading", "... by other action of agent", "... by someone else", "causal action", "... by e-mail reading", "environment"))) %>%
mutate(ignorance=factor(ignorance, levels= c( "doesn't read e-mail", "reads e-mail")))
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by( counterfactual) %>%
summarize(n=n()) %>%
ungroup(ignorance) %>%
mutate(freq =
case_when(ignorance == "doesn't read e-mail" ~ n / 116,
ignorance == "reads e-mail" ~ n / 125)
)
df.exp_cf_desc <- df.exp_cf%>%
select(scenario, counterfactual, ignorance) %>%
group_by( counterfactual) %>%
summarize(n=n())
df.exp_cf_desc <- df.exp_long%>%
select(scenario, counterfactual, ignorance) %>%
group_by( counterfactual) %>%
summarize(n=n())
View(df.exp_cf_desc)
